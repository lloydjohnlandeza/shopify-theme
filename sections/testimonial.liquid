<div
  class="max-w-7xl mx-auto px-2 py-4 md:py-8 lg:py-16"
>
  <h2 class="text-center text-3xl font-bold md:text-4xl lg:text-5xl xl:text-6xl">{{ section.settings.title }}</h2>
  <p class="md:text-xl text-center">{{ section.settings.description }}</p>
</div>
<testimonial-carousel class="block w-full h-[500px] relative overflow-hidden px-2 md:px-0">
  <div class="flex justify-end mb-2 gap-2 sm:absolute sm:h-[216px] sm:justify-between sm:items-center sm:w-full sm:max-w-3xl sm:mx-auto sm:inset-x-0">
    <button id="prev" class="px-4 py-3 rounded-md drop-shadow-xl z-30">
      <base-icons class="text-black" icon_name="previous"></base-icons>
    </button>
    <button id="next" class="px-4 py-3 rounded-md drop-shadow-xl z-30">
      <base-icons class="text-black" icon_name="next"></base-icons>
    </button>
  </div>
  <ul class="flex justify-center relative">
    {%- for block in section.blocks -%}
      <li
        class="
          {%- if forloop.index == 1 -%}
            testimony-left
          {% elsif forloop.index == 2 %}
            testimony-active
            {% else %}
            testimony-right
          {% endif %}
          testimony transition-all duration-1000 ease-in-out
        "
      >
        <p class="text-center transition-all duration-1000">
          {{ block.settings.testimony }}
        </p>
        <div class="absolute self-center mx-auto -bottom-32 text-center">
          <img
            class="h-24 w-24 rounded-full aspect-square mx-auto bg-my-grayish-blue object-cover"
            src="{{ block.settings.image | image_url: width: 200 }}"
            height="200"
            width="200"
            alt="{{ block.settings.image.alt | escape }}"
            loading="lazy"
          >
          <h6 class="my-4 font-bold">{{ block.settings.name }}</h6>
          <p>{{ block.settings.profession }}</p>
        </div>
      </li>
    {%- endfor -%}
  </ul>
</testimonial-carousel>
<script defer="defer">
  if (!customElements.get('testimonial-carousel')) {
    customElements.define(
      'testimonial-carousel',
      class TestimonialCarousel extends HTMLElement {
        constructor() {
          super();
          this.testimonies = this.querySelectorAll('.testimony');
          this.handleCardClick = this.handleCardClick.bind(this);
          this.handleNavigation = this.handleNavigation.bind(this);
          this.handleNext = this.handleNext.bind(this);
          this.handlePrev = this.handlePrev.bind(this);
          this.previousBtn = this.querySelector('#prev');
          this.nextBtn = this.querySelector('#next');
          this.attachedEvents();
        }

        disconnectedCallback() {
          this.removeEvents();
        }
        attachedEvents() {
          let height = 0;
          this.testimonies.forEach((testimony) => {
            testimony.addEventListener('click', this.handleCardClick);
            if (height < testimony.clientHeight) {
              height = testimony.clientHeight;
            }
          });
          this.style.height = `${height + 200}px`;
          this.nextBtn.addEventListener('click', this.handleNext);
          this.previousBtn.addEventListener('click', this.handlePrev);
        }

        removeEvents() {
          this.testimonies.forEach((testimony) => {
            testimony.removeEventListener('click', this.handleCardClick);
          });
          this.testimonies = [];
          this.nextBtn.removeEventListener('click', this.handleNext);
          this.previousBtn.removeEventListener('click', this.handlePrev);
        }

        handleNext() {
          this.handleNavigation(this.querySelector('.testimony.testimony-right'));
        }

        handlePrev() {
          this.handleNavigation(this.querySelector('.testimony.testimony-left'));
        }

        handleCardClick(event) {
          event.preventDefault();
          this.handleNavigation(event.target);
        }

        handleNavigation(element) {
          if (!element) return;
          const currentActive = this.querySelector('.testimony.testimony-active');
          const currentLeft = this.querySelector('.testimony.testimony-left');
          const currentRight = this.querySelector('.testimony.testimony-right');
          if (element.classList.contains('testimony-right')) {
            element.classList.add('testimony-active');
            element.classList.remove('testimony-right');

            currentActive.classList.remove('testimony-active');
            currentActive.classList.add('testimony-left');

            currentLeft.classList.remove('testimony-left');
            currentLeft.classList.add('testimony-right');
          } else if (element.classList.contains('testimony-left')) {
            element.classList.add('testimony-active');
            element.classList.remove('testimony-left');

            currentActive.classList.remove('testimony-active');
            currentActive.classList.add('testimony-right');

            currentRight.classList.remove('testimony-right');
            currentRight.classList.add('testimony-left');
          }
        }
      }
    );
  }
</script>
{% schema %}
{
  "name": "Testimonial",
  "tag": "section",
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Title",
      "default": "What our customer says"
    },
    {
      "type": "text",
      "id": "description",
      "label": "Description",
      "default": "Real customer stories: Find out why our customers love us."
    }
  ],
  "blocks": [
    {
      "type": "testimony",
      "name": "testimony",
      "settings": [
        {
          "type": "textarea",
          "id": "testimony",
          "label": "Testimony"
        },
        {
          "type": "text",
          "id": "name",
          "label": "Name"
        },
        {
          "type": "text",
          "id": "profession",
          "label": "Profession"
        },
        {
          "type": "image_picker",
          "id": "image",
          "label": "Image"
        }
      ]
    }
  ],
  "presets": [
    {
      "category": "Testimonial",
      "name": "Testimonial"
    }
  ]
}
{% endschema %}
